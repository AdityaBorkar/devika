model Workspace {
    workspaceId String   @id @default(cuid(2))
    createdAt   DateTime @default(now())
    slug        String   @unique
    name        String
    ide         String // array: "cursor", "github-copilot", "augment", "windsurf", "continue", "roo-code", "cline"
    tdd         Boolean
    // createdBy     String
    // createdByUser User            @relation(fields: [createdBy], references: [userId], onDelete: Cascade)
    // Task          Task[]
    // Notifications Notifications[]
}

model WorkspaceState {
    workspaceId    String  @id
    current_prd_id String?
    // current_prd    Prd?
    // current_task   Task?
    // current_cycle  Cycle?
    // next_task      Task?
    // next_cycle     Cycle?
    // connections    WorkspaceConnection[]
    // workspace      Workspace             @relation(fields: [workspaceId], references: [workspaceId], onDelete: Cascade)
}

model WorkspaceConnection {
    connectionId String    @id @default(cuid(2))
    workspaceId  String
    isActive     Boolean   @default(true)
    closedAt     DateTime?
    createdAt    DateTime  @default(now())
    screenState  String? // TODO: STORE THIS ONLY ON THE CONNECTION-LEVEL
    // State: section,
    // prd changes?
    // workspace    Workspace @relation(fields: [workspaceId], references: [workspaceId], onDelete: Cascade)
}
