import type { Cycle, CycleProgress } from './types';

const generateProgress = (tasks: { status: string }[]): CycleProgress => {
	const totalTasks = tasks.length;
	const completedTasks = tasks.filter((task) => task.status === 'Done').length;

	return {
		completedTasks,
		percentComplete:
			totalTasks > 0 ? Math.round((completedTasks / totalTasks) * 100) : 0,
		tasksStatus: {
			blocked: tasks.filter((task) => task.status === 'Blocked').length,
			done: completedTasks,
			inProgress: tasks.filter((task) => task.status === 'In Progress').length,
			todo: tasks.filter((task) => task.status === 'Todo').length,
		},
		totalTasks,
	};
};

export const MOCK_CYCLES: Cycle[] = [
	{
		additionalInstructions: 'Support Google and GitHub OAuth',
		changelog: 'Added authentication system with Google and GitHub OAuth',
		description: 'Implement user authentication with OAuth providers',
		endDate: '2023-10-15',
		id: '1',
		integrationTests: ['Auth flow test', 'Session expiry test'],
		name: 'Authentication System',
		progress: generateProgress([
			{ status: 'Done' },
			{ status: 'Done' },
			{ status: 'Done' },
		]),
		roadblocks: [],
		startDate: '2023-10-01',
		status: 'Completed',
		tasks: [
			{
				actualHours: 3,
				assignee: 'Sarah',
				estimatedHours: 4,
				id: '1-1',
				status: 'Done',
				title: 'Set up OAuth providers',
			},
			{
				actualHours: 5,
				assignee: 'Mark',
				estimatedHours: 6,
				id: '1-2',
				status: 'Done',
				title: 'Create login page',
			},
			{
				actualHours: 10,
				assignee: 'Sarah',
				estimatedHours: 8,
				id: '1-3',
				status: 'Done',
				title: 'Implement session management',
			},
		],
		tokensConsumed: 14500,
		writeDocumentation: true,
		writeTests: true,
	},
	{
		additionalInstructions: 'Use Recharts for visualization',
		description: 'Create dashboard with charts for user analytics',
		endDate: '2023-10-30',
		id: '2',
		integrationTests: ['Data loading test'],
		name: 'Data Visualization Dashboard',
		progress: generateProgress([
			{ status: 'Done' },
			{ status: 'In Progress' },
			{ status: 'In Progress' },
			{ status: 'Todo' },
		]),
		roadblocks: [
			{
				createdAt: '2023-10-18',
				description: 'API rate limiting affecting data fetching',
				id: 'rb-1',
				status: 'Active',
			},
		],
		startDate: '2023-10-16',
		status: 'In Progress',
		tasks: [
			{
				actualHours: 6,
				assignee: 'Lisa',
				estimatedHours: 5,
				id: '2-1',
				status: 'Done',
				title: 'Design dashboard layout',
			},
			{
				actualHours: 4,
				assignee: 'John',
				estimatedHours: 8,
				id: '2-2',
				status: 'In Progress',
				title: 'Implement data fetching',
			},
			{
				actualHours: 5,
				assignee: 'Lisa',
				estimatedHours: 10,
				id: '2-3',
				status: 'In Progress',
				title: 'Create chart components',
			},
			{
				assignee: 'John',
				estimatedHours: 6,
				id: '2-4',
				status: 'Todo',
				title: 'Add filtering options',
			},
		],
		tokensConsumed: 22300,
		writeDocumentation: false,
		writeTests: true,
	},
	{
		description: 'Optimize application performance and loading times',
		endDate: '2023-11-10',
		id: '3',
		name: 'Performance Optimization',
		progress: generateProgress([
			{ status: 'Todo' },
			{ status: 'Todo' },
			{ status: 'Todo' },
			{ status: 'Todo' },
		]),
		roadblocks: [],
		startDate: '2023-11-01',
		status: 'Not Started',
		tasks: [
			{
				assignee: 'Alex',
				estimatedHours: 4,
				id: '3-1',
				status: 'Todo',
				title: 'Analyze bundle size',
			},
			{
				assignee: 'Maya',
				estimatedHours: 8,
				id: '3-2',
				status: 'Todo',
				title: 'Implement code splitting',
			},
			{
				assignee: 'Alex',
				estimatedHours: 6,
				id: '3-3',
				status: 'Todo',
				title: 'Optimize images',
			},
			{
				assignee: 'Maya',
				estimatedHours: 5,
				id: '3-4',
				status: 'Todo',
				title: 'Add loading skeletons',
			},
		],
		tokensConsumed: 0,
		writeDocumentation: true,
		writeTests: false,
	},
	{
		additionalInstructions: 'Implement with RBAC patterns',
		description: 'Create user management interface for admins',
		endDate: '2023-10-20',
		id: '4',
		name: 'User Management System',
		progress: generateProgress([
			{ status: 'Done' },
			{ status: 'In Progress' },
			{ status: 'Blocked' },
		]),
		roadblocks: [
			{
				createdAt: '2023-10-15',
				description: 'Security requirements changed',
				id: 'rb-2',
				status: 'Active',
			},
			{
				createdAt: '2023-10-12',
				description: 'Database connection issues',
				id: 'rb-3',
				resolvedAt: '2023-10-14',
				status: 'Resolved',
			},
		],
		startDate: '2023-10-10',
		status: 'Cancelled',
		tasks: [
			{
				actualHours: 5,
				assignee: 'Raj',
				estimatedHours: 6,
				id: '4-1',
				status: 'Done',
				title: 'Design user management UI',
			},
			{
				actualHours: 8,
				assignee: 'Emma',
				estimatedHours: 12,
				id: '4-2',
				status: 'In Progress',
				title: 'Implement user CRUD operations',
			},
			{
				assignee: 'Raj',
				estimatedHours: 8,
				id: '4-3',
				status: 'Blocked',
				title: 'Add role-based permissions',
			},
		],
		tokensConsumed: 8700,
		writeDocumentation: true,
		writeTests: true,
	},
	{
		additionalInstructions: 'Use Stripe for payments, ShipEngine for shipping',
		description: 'Integrate with third-party payment and shipping APIs',
		endDate: '2023-11-30',
		id: '5',
		integrationTests: [
			'Payment processing test',
			'Shipping calculation test',
			'Tax calculation test',
		],
		name: 'API Integration',
		progress: generateProgress([
			{ status: 'Todo' },
			{ status: 'Todo' },
			{ status: 'Todo' },
			{ status: 'Todo' },
		]),
		roadblocks: [],
		startDate: '2023-11-15',
		status: 'Not Started',
		tasks: [
			{
				assignee: 'Chen',
				estimatedHours: 10,
				id: '5-1',
				status: 'Todo',
				title: 'Set up payment gateway',
			},
			{
				assignee: 'Priya',
				estimatedHours: 8,
				id: '5-2',
				status: 'Todo',
				title: 'Implement shipping calculator',
			},
			{
				assignee: 'Chen',
				estimatedHours: 6,
				id: '5-3',
				status: 'Todo',
				title: 'Add tax calculation service',
			},
			{
				assignee: 'Priya',
				estimatedHours: 12,
				id: '5-4',
				status: 'Todo',
				title: 'Create order confirmation flow',
			},
		],
		tokensConsumed: 0,
		writeDocumentation: true,
		writeTests: true,
	},
];
